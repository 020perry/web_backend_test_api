{
	"info": {
		"_postman_id": "442ad1c6-886f-4a75-8d7f-3b7cc31f3d00",
		"name": "DTT Back end assessment â€“ Catering API",
		"description": "The Postman collection for the DTT backend assessment test: Catering API.\n\n### Note:\n\nMake sure to replace `http://localhost/web_backend_test_catering_api` with your actual server URL if your server is not running locally. Also, the request and response formats might change slightly based on your actual implementation.\n\nAlso the params and body are set so it is easier to test.\n\n### Example:\n\nIf your server is running on port 8888, then your Current base URL would be, `http://localhost:8888/web_backend_test_catering_api`.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28727199",
		"_collection_link": "https://galactic-escape-541726.postman.co/workspace/0297cda7-dba4-4dfc-88d1-5f5f4251a6b6/collection/28727199-442ad1c6-886f-4a75-8d7f-3b7cc31f3d00?action=share&creator=28727199&source=collection_link"
	},
	"item": [
		{
			"name": "Test API",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}",
					"host": [
						"{{baseUrl}}"
					]
				},
				"description": "API call used to test local development environment and database connection.\n\nShould print _'Hello World!'_ if all is OK."
			},
			"response": []
		},
		{
			"name": "Create facility",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Facility Benz\",\n  \"location\": {\n    \"city\": \"CityName\",\n    \"address\": \"Street Name\",\n    \"zip_code\": \"Zip Code\",\n    \"country_code\": \"NL\",\n    \"phone_number\": \"Phone Number\"\n  },\n  \"tags\": [\"TagXA\", \"TagAX\"]\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/facility",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"facility"
					]
				},
				"description": "## Create a new Facility\n\nThis API endpoint allows you to create a new facility.\n\n### Endpoint\n\n`POST /facility`\n\n### How to use:\n\nYou don't need to replace anything in the URL for this endpoint.\n\nPOST [http://localhost/web_backend_test_catering_api/facility]()"
			},
			"response": []
		},
		{
			"name": "Read Facility",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/facility/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"facility",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "5",
							"description": "Read Facility with id 5."
						}
					]
				},
				"description": "## Get a Facility\n\nThis API endpoint allows you to get the details of a specific facility.\n\n### Endpoint\n\n`GET /facility/{id}`\n\n### How to use:\n\nDon't forget to replace `{id}` with an actual ID when testing the endpoint. You can do this either directly in the **address bar** or by setting the `id` path variable in the \"**Params**\" section.\n\n### Example:\n\nIf you want to get the facility with ID 5, you would use the following URL:\n\nGET [http://localhost/web_backend_test_catering_api/facility/5]()"
			},
			"response": []
		},
		{
			"name": "Update Facility",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"New Facility Name\",\n  \"location\": {\n    \"city\": \"New CityName\",\n    \"address\": \"New Street Name\",\n    \"zip_code\": \"65\",\n    \"country_code\": \"NL\",\n    \"phone_number\": \"New Phone Number\"\n  },\n  \"tags\": [\"NewTag6563\", \"NewTag6956\"]\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/facility/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"facility",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "5",
							"description": "Update Facility id 5."
						}
					]
				},
				"description": "## Update a Facility\n\nThis API endpoint allows you to update the details of a specific facility.\n\n### Endpoint\n\n`Put /facility/{id}`\n\n### How to use:\n\nDon't forget to replace `{id}` with an actual ID when testing the endpoint. You can do this either directly in the **address bar** or by setting the `id` path variable in the \"**Params**\" section. Second add a body and select raw (json).\n\n### Example:\n\nIf you want to edit the facility with ID 5, you would use the following URL:\n\nPUT [http://localhost/web_backend_test_catering_api/facility/5]()"
			},
			"response": []
		},
		{
			"name": "Delete facility",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/facility/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"facility",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "4",
							"description": "Delete Facility id 4."
						}
					]
				},
				"description": "## Delete a Facility\n\nThis API endpoint allows you to delete a specific facility.\n\n### Endpoint\n\n`DELETE /facility/{id}`\n\n### How to use:\n\nDon't forget to replace `{id}` with an actual ID when testing the endpoint. You can do this either directly in the **address bar** or by setting the `id` path variable in the \"**Params**\" section.\n\n### Example:\n\nIf you want to delete the facility with ID 5, you would use the following URL:\n\nPUT [http://localhost/web_backend_test_catering_api/facility/5]()"
			},
			"response": []
		},
		{
			"name": "Get All Facilities",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/facilities",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"facilities"
					]
				},
				"description": "## Get all Facilities\n\nThis API endpoint allows you to get a list of all facilities.\n\n### Endpoint\n\n`GET /facilities`\n\n### How to use:\n\nYou don't need to replace anything in the URL for this endpoint."
			},
			"response": []
		},
		{
			"name": "Search Facility",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/search",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"search"
					],
					"query": [
						{
							"key": "query",
							"value": "Facility",
							"description": "This will return all facilities where the name includes the string \"Facility A\".\n\n",
							"disabled": true
						},
						{
							"key": "query",
							"value": "Tag1",
							"description": "This will return all facilities that have a tag where the name includes the string \"Tag1\".\n\n",
							"disabled": true
						},
						{
							"key": "query",
							"value": "Amsterdam",
							"description": "This will return all facilities located in a city that includes the string \"Amsterdam\".\n\n",
							"disabled": true
						},
						{
							"key": "query",
							"value": "ams",
							"description": "This will returns all facilities located in a city that includes \"ams\" in its name (like \"Amsterdam\").",
							"disabled": true
						},
						{
							"key": "page",
							"value": "2",
							"description": "page",
							"disabled": true
						},
						{
							"key": "size",
							"value": "10",
							"description": "size",
							"disabled": true
						}
					]
				},
				"description": "## Search Facilities\n\nThis API endpoint allows you to search for facilities.\n\n### Endpoint\n\n`Get /facilities/search`\n\n### How to use:\n\nIn order to search for facilities, you can use one or more query parameters in your request. Each query parameter corresponds to a specific attribute of the facility (like the name, tag, or city).\n\nTo use this functionality, simply click on the query parameters you are interested in and edit their values to match your search criteria.\n\n### Example:\n\n{{baseUrl}}\n\n/search?query=Facility A&query=Tag1&query=Amsterdam\n\nReturns all facilities with \"Facility A\" in their name, and have \"Tag1\" associated with them, and are located in \"Amsterdam\"."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost/web_backend_test_catering_api",
			"type": "string"
		}
	]
}